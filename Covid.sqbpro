<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/princ/portfolio.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="15777"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/><expanded_item id="4" parent="1"/></tab_structure><tab_browse><current_table name="4,11:mainCovidDeaths"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">Select *
From CovidDeaths
Where continent is not null 
order by 3,4


-- Select Data that we are going to be starting with

Select Location, date, total_cases, new_cases, total_deaths, population
From CovidDeaths
Where continent is not null 
order by 1,2


-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

Select Location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From CovidDeaths
Where location = 'India'
and continent is not null 
order by 1,2


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

Select Location, date, Population, total_cases,  (total_cases/population)*100 as PercentPopulationInfected
From CovidDeaths
--Where location ='India'
order by 1,2


-- Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From CovidDeaths
--Where location = 'India'
Group by Location, Population
order by PercentPopulationInfected desc


-- Countries with Highest Death Count per Population

Select Location, MAX(Total_deaths) as TotalDeathCount
From CovidDeaths
--Where location = 'India'
Where continent is not null 
Group by Location
order by TotalDeathCount desc



-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(Total_deaths) as TotalDeathCount
From CovidDeaths
--Where location = 'India'
Where continent is not null 
Group by continent
order by TotalDeathCount desc


-- GLOBAL NUMBERS

Select SUM(cast(new_cases as INT)) as total_cases, SUM(cast (new_deaths as INT)) as total_deaths, SUM(new_deaths)/SUM(New_Cases)*100 as DeathPercentage
From CovidDeaths
--Where location ='India'
where continent is not null 
--Group By date
order by 1,2

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent, dea.location , dea.date , dea.population , vac.new_vaccinations
,sum(vac.new_vaccinations) OVER (PARTITION by dea.location ORDER by dea.location, dea.date ) as RollingPeopleVaccinated
from CovidDeaths dea 
JOIN CovidVaccination vac
on dea.location = vac.location 
and dea.date = vac.date
where dea.continent is not NULL
ORDER by 2 ,3;

-- USE CTE

WITH PopvsVac(continent ,location , date , population ,new_vaccinations, RollingPeopleVaccinated)
as(
SELECT dea.continent, dea.location , dea.date , dea.population , vac.new_vaccinations
,sum(CAST(vac.new_vaccinations as INT)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date ) as RollingPeopleVaccinated
from CovidDeaths dea 
JOIN CovidVaccination vac
on dea.location = vac.location 
and dea.date = vac.date
where dea.continent is not NULL
--ORDER by 2 ,3
)
SELECT *,(RollingPeopleVaccinated/cast(population as REAL))*100
 from PopvsVac;
 
 -- TEMP TABLE
 
 
CREATE TEMPORARY TABLE PercentPopulationInfected
(
    continent TEXT,
    location TEXT,
    date datetime,
    population INT,
    new_vaccinations INT,
    RollingPeopleVaccinated INT
);

INSERT INTO PercentPopulationInfected
SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations as INT)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date) as RollingPeopleVaccinated
FROM
    CovidDeaths dea
JOIN CovidVaccination vac
ON
    dea.location = vac.location
    AND dea.date = vac.date
WHERE
    dea.continent IS NOT NULL;

SELECT
    *,
    (RollingPeopleVaccinated / CAST(population as REAL)) * 100 as PercentPopulationVaccinated
FROM
    PercentPopulationInfected;
	

-- Creating View to store data for later visualizations
CREATE VIEW PercentPopulationVaccinated As
SELECT dea.continent, dea.location , dea.date , dea.population , vac.new_vaccinations
,sum(CAST(vac.new_vaccinations as INT)) OVER (PARTITION by dea.location ORDER by dea.location, dea.date ) as RollingPeopleVaccinated
from CovidDeaths dea 
JOIN CovidVaccination vac
on dea.location = vac.location 
and dea.date = vac.date
where dea.continent is not NULL

SELECT * FROM PercentPopulationVaccinated;</sql><current_tab id="0"/></tab_sql></sqlb_project>
